{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0ccf6711",
   "metadata": {},
   "outputs": [],
   "source": [
    "# PASSO A PASSO: PROJETO DE CIENCIA DE DADOS\n",
    "# 1. Entendimento do desafio\n",
    "# 2. Entendimento da Área/Empresa\n",
    "# 3. Extração/Obtenção de dados (importar a base de dados)\n",
    "# 4. Ajuste de dados (Tratamento/Limpeza)\n",
    "# 5. Análise Exploratória -->correlação: -1 a 1<--\n",
    "# 6. Modelagem + Algoritmos (aqui entra a INteligência Artificial, se necessário)\n",
    "# 7. Interpretação de resultados"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5fc9ea78",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TV</th>\n",
       "      <th>Radio</th>\n",
       "      <th>Jornal</th>\n",
       "      <th>Vendas</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>230.1</td>\n",
       "      <td>37.8</td>\n",
       "      <td>69.2</td>\n",
       "      <td>22.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>44.5</td>\n",
       "      <td>39.3</td>\n",
       "      <td>45.1</td>\n",
       "      <td>10.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>17.2</td>\n",
       "      <td>45.9</td>\n",
       "      <td>69.3</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>151.5</td>\n",
       "      <td>41.3</td>\n",
       "      <td>58.5</td>\n",
       "      <td>16.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>180.8</td>\n",
       "      <td>10.8</td>\n",
       "      <td>58.4</td>\n",
       "      <td>17.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195</th>\n",
       "      <td>38.2</td>\n",
       "      <td>3.7</td>\n",
       "      <td>13.8</td>\n",
       "      <td>7.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>94.2</td>\n",
       "      <td>4.9</td>\n",
       "      <td>8.1</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>177.0</td>\n",
       "      <td>9.3</td>\n",
       "      <td>6.4</td>\n",
       "      <td>14.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>283.6</td>\n",
       "      <td>42.0</td>\n",
       "      <td>66.2</td>\n",
       "      <td>25.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>232.1</td>\n",
       "      <td>8.6</td>\n",
       "      <td>8.7</td>\n",
       "      <td>18.4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>200 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        TV  Radio  Jornal  Vendas\n",
       "0    230.1   37.8    69.2    22.1\n",
       "1     44.5   39.3    45.1    10.4\n",
       "2     17.2   45.9    69.3    12.0\n",
       "3    151.5   41.3    58.5    16.5\n",
       "4    180.8   10.8    58.4    17.9\n",
       "..     ...    ...     ...     ...\n",
       "195   38.2    3.7    13.8     7.6\n",
       "196   94.2    4.9     8.1    14.0\n",
       "197  177.0    9.3     6.4    14.8\n",
       "198  283.6   42.0    66.2    25.5\n",
       "199  232.1    8.6     8.7    18.4\n",
       "\n",
       "[200 rows x 4 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              TV     Radio    Jornal    Vendas\n",
      "TV      1.000000  0.054809  0.056648  0.901208\n",
      "Radio   0.054809  1.000000  0.354104  0.349631\n",
      "Jornal  0.056648  0.354104  1.000000  0.157960\n",
      "Vendas  0.901208  0.349631  0.157960  1.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Passo 5: Análise Exploratória\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "tabela = pd.read_csv('advertising.csv')\n",
    "display(tabela)\n",
    "print(tabela.corr())\n",
    "\n",
    "# Criação de um gráfico\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "sns.heatmap(tabela.corr(),cmap=\"Reds\",annot=True)\n",
    "\n",
    "#Exibição do gráfico\n",
    "\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "f05e5fbc",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Precisão regressão linear: 0.926863538181066\n",
      "Precisão árvore de decisão: 0.9570551160283081\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Y Teste</th>\n",
       "      <th>Previsão Regressão LInear</th>\n",
       "      <th>Previsão Árvore de Decisão</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>11.9</td>\n",
       "      <td>12.721671</td>\n",
       "      <td>12.113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>14.0</td>\n",
       "      <td>13.345682</td>\n",
       "      <td>13.936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>22.6</td>\n",
       "      <td>20.930065</td>\n",
       "      <td>21.985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>23.2</td>\n",
       "      <td>22.149693</td>\n",
       "      <td>22.378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>19.8</td>\n",
       "      <td>21.461335</td>\n",
       "      <td>18.991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>13.2</td>\n",
       "      <td>14.134719</td>\n",
       "      <td>12.813</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>24.7</td>\n",
       "      <td>21.808046</td>\n",
       "      <td>23.234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>20.2</td>\n",
       "      <td>22.085328</td>\n",
       "      <td>19.032</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>17.0</td>\n",
       "      <td>19.490908</td>\n",
       "      <td>17.692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>20.9</td>\n",
       "      <td>19.608941</td>\n",
       "      <td>19.982</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137</th>\n",
       "      <td>20.8</td>\n",
       "      <td>22.810364</td>\n",
       "      <td>19.445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>18.3</td>\n",
       "      <td>18.828891</td>\n",
       "      <td>18.676</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>17.4</td>\n",
       "      <td>18.918501</td>\n",
       "      <td>17.787</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>10.1</td>\n",
       "      <td>9.833398</td>\n",
       "      <td>10.041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>194</th>\n",
       "      <td>17.3</td>\n",
       "      <td>16.545754</td>\n",
       "      <td>14.814</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>16.8</td>\n",
       "      <td>20.136708</td>\n",
       "      <td>17.511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>16.7</td>\n",
       "      <td>14.873921</td>\n",
       "      <td>16.758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>15.2</td>\n",
       "      <td>14.994817</td>\n",
       "      <td>14.196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>10.8</td>\n",
       "      <td>10.798188</td>\n",
       "      <td>11.212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>8.4</td>\n",
       "      <td>8.610933</td>\n",
       "      <td>9.394</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>26.2</td>\n",
       "      <td>25.062461</td>\n",
       "      <td>25.157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>13.3</td>\n",
       "      <td>13.153200</td>\n",
       "      <td>13.242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>5.9</td>\n",
       "      <td>6.064162</td>\n",
       "      <td>7.034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>16.9</td>\n",
       "      <td>16.997915</td>\n",
       "      <td>17.300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>15.5</td>\n",
       "      <td>15.274664</td>\n",
       "      <td>12.530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>17.1</td>\n",
       "      <td>17.902241</td>\n",
       "      <td>17.012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>18.9</td>\n",
       "      <td>20.546680</td>\n",
       "      <td>19.319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>17.9</td>\n",
       "      <td>16.933251</td>\n",
       "      <td>17.615</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>19.4</td>\n",
       "      <td>20.202714</td>\n",
       "      <td>19.301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>9.2</td>\n",
       "      <td>9.716466</td>\n",
       "      <td>8.366</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>18.0</td>\n",
       "      <td>19.627881</td>\n",
       "      <td>18.681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>191</th>\n",
       "      <td>11.9</td>\n",
       "      <td>9.900345</td>\n",
       "      <td>11.670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>10.1</td>\n",
       "      <td>9.792195</td>\n",
       "      <td>10.337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>20.9</td>\n",
       "      <td>18.303285</td>\n",
       "      <td>19.076</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>13.6</td>\n",
       "      <td>13.066107</td>\n",
       "      <td>12.928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138</th>\n",
       "      <td>9.6</td>\n",
       "      <td>9.708741</td>\n",
       "      <td>10.235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>10.7</td>\n",
       "      <td>11.140400</td>\n",
       "      <td>12.675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>5.3</td>\n",
       "      <td>8.025509</td>\n",
       "      <td>3.967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>20.7</td>\n",
       "      <td>21.279143</td>\n",
       "      <td>19.718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>17.0</td>\n",
       "      <td>18.931715</td>\n",
       "      <td>17.698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>14.6</td>\n",
       "      <td>13.840252</td>\n",
       "      <td>13.485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>16.4</td>\n",
       "      <td>16.015400</td>\n",
       "      <td>16.585</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>10.6</td>\n",
       "      <td>10.697174</td>\n",
       "      <td>11.308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>14.6</td>\n",
       "      <td>15.237398</td>\n",
       "      <td>12.932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>23.8</td>\n",
       "      <td>24.927023</td>\n",
       "      <td>22.208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>8.7</td>\n",
       "      <td>10.284235</td>\n",
       "      <td>9.927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>7.6</td>\n",
       "      <td>7.813118</td>\n",
       "      <td>7.315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>16.5</td>\n",
       "      <td>17.236176</td>\n",
       "      <td>16.799</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>16.0</td>\n",
       "      <td>16.323591</td>\n",
       "      <td>14.970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>12.3</td>\n",
       "      <td>11.534873</td>\n",
       "      <td>11.850</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Y Teste  Previsão Regressão LInear  Previsão Árvore de Decisão\n",
       "31      11.9                  12.721671                      12.113\n",
       "63      14.0                  13.345682                      13.936\n",
       "52      22.6                  20.930065                      21.985\n",
       "47      23.2                  22.149693                      22.378\n",
       "109     19.8                  21.461335                      18.991\n",
       "57      13.2                  14.134719                      12.813\n",
       "128     24.7                  21.808046                      23.234\n",
       "54      20.2                  22.085328                      19.032\n",
       "25      17.0                  19.490908                      17.692\n",
       "27      20.9                  19.608941                      19.982\n",
       "137     20.8                  22.810364                      19.445\n",
       "70      18.3                  18.828891                      18.676\n",
       "11      17.4                  18.918501                      17.787\n",
       "38      10.1                   9.833398                      10.041\n",
       "194     17.3                  16.545754                      14.814\n",
       "178     16.8                  20.136708                      17.511\n",
       "177     16.7                  14.873921                      16.758\n",
       "123     15.2                  14.994817                      14.196\n",
       "134     10.8                  10.798188                      11.212\n",
       "170      8.4                   8.610933                       9.394\n",
       "183     26.2                  25.062461                      25.157\n",
       "161     13.3                  13.153200                      13.242\n",
       "192      5.9                   6.064162                       7.034\n",
       "95      16.9                  16.997915                      17.300\n",
       "120     15.5                  15.274664                      12.530\n",
       "41      17.1                  17.902241                      17.012\n",
       "68      18.9                  20.546680                      19.319\n",
       "43      17.9                  16.933251                      17.615\n",
       "92      19.4                  20.202714                      19.301\n",
       "12       9.2                   9.716466                       8.366\n",
       "20      18.0                  19.627881                      18.681\n",
       "191     11.9                   9.900345                      11.670\n",
       "149     10.1                   9.792195                      10.337\n",
       "113     20.9                  18.303285                      19.076\n",
       "83      13.6                  13.066107                      12.928\n",
       "138      9.6                   9.708741                      10.235\n",
       "51      10.7                  11.140400                      12.675\n",
       "78       5.3                   8.025509                       3.967\n",
       "104     20.7                  21.279143                      19.718\n",
       "74      17.0                  18.931715                      17.698\n",
       "114     14.6                  13.840252                      13.485\n",
       "50      16.4                  16.015400                      16.585\n",
       "125     10.6                  10.697174                      11.308\n",
       "19      14.6                  15.237398                      12.932\n",
       "101     23.8                  24.927023                      22.208\n",
       "75       8.7                  10.284235                       9.927\n",
       "172      7.6                   7.813118                       7.315\n",
       "174     16.5                  17.236176                      16.799\n",
       "64      16.0                  16.323591                      14.970\n",
       "144     12.3                  11.534873                      11.850"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TV</th>\n",
       "      <th>Radio</th>\n",
       "      <th>Jornal</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>23.1</td>\n",
       "      <td>3.8</td>\n",
       "      <td>69.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>44.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>170.2</td>\n",
       "      <td>45.9</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      TV  Radio  Jornal\n",
       "0   23.1    3.8    69.2\n",
       "1   44.5    0.0     5.1\n",
       "2  170.2   45.9     0.0"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 7.292  9.271 20.645]\n"
     ]
    }
   ],
   "source": [
    "# Passo 6: Modelagem e Algoritmos (Machine Learning)\n",
    "\n",
    "y = tabela['Vendas']\n",
    "x = tabela[['TV','Radio','Jornal']]\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "x_treino,x_teste,y_treino,y_teste = train_test_split(x,y)   #test_size=0.3  train_size=0.7\n",
    "\n",
    "# Criando a INteligência Artificial\n",
    "# Importação\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "\n",
    "# Criação\n",
    "modelo_linear = LinearRegression()\n",
    "modelo_arvore = RandomForestRegressor()\n",
    "\n",
    "# TReinamento\n",
    "modelo_linear.fit(x_treino,y_treino)\n",
    "modelo_arvore.fit(x_treino,y_treino)\n",
    "\n",
    "# Teste\n",
    "previsao_linear = modelo_linear.predict(x_teste)\n",
    "previsao_arvore = modelo_arvore.predict(x_teste)\n",
    "\n",
    "from sklearn.metrics import r2_score\n",
    "\n",
    "print(f'Precisão regressão linear: {r2_score(y_teste,previsao_linear)}')\n",
    "print(f'Precisão árvore de decisão: {r2_score(y_teste,previsao_arvore)}')\n",
    "\n",
    "# Visualização dos Resultados\n",
    "\n",
    "tabela_auxiliar = pd.DataFrame()\n",
    "tabela_auxiliar['Y Teste'] = y_teste\n",
    "tabela_auxiliar['Previsão Regressão LInear'] = previsao_linear\n",
    "tabela_auxiliar['Previsão Árvore de Decisão'] = previsao_arvore\n",
    "display(tabela_auxiliar)\n",
    "\n",
    "nova_tabela = pd.read_csv(\"novos.csv\")\n",
    "display(nova_tabela)\n",
    "\n",
    "previsao = modelo_arvore.predict(nova_tabela)\n",
    "print(previsao)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fce2a3ab",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eac1f672",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
